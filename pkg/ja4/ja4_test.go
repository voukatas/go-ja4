package ja4

import (
	"testing"
)

func TestParseClientHelloForJA4(t *testing.T) {
	tests := []struct {
		name        string
		payload     []byte
		protocol    byte
		expectedJA4 string
	}{
		{
			name:        "TLS12",
			payload:     []byte{0x16, 0x3, 0x1, 0x2, 0x0, 0x1, 0x0, 0x1, 0xfc, 0x3, 0x3, 0xec, 0xb2, 0x69, 0x1a, 0xdd, 0xb2, 0xbf, 0x6c, 0x59, 0x9c, 0x7a, 0xaa, 0xe2, 0x3d, 0xe5, 0xf4, 0x25, 0x61, 0xcc, 0x4, 0xeb, 0x41, 0x2, 0x9a, 0xcc, 0x6f, 0xc0, 0x50, 0xa1, 0x6a, 0xc1, 0xd2, 0x20, 0x46, 0xf8, 0x61, 0x7b, 0x58, 0xa, 0xc9, 0x35, 0x8e, 0x2a, 0xa4, 0x4e, 0x30, 0x6d, 0x52, 0x46, 0x6b, 0xcc, 0x98, 0x9c, 0x87, 0xc8, 0xca, 0x64, 0x30, 0x9f, 0x5f, 0xaf, 0x50, 0xba, 0x7b, 0x4d, 0x0, 0x22, 0x13, 0x1, 0x13, 0x3, 0x13, 0x2, 0xc0, 0x2b, 0xc0, 0x2f, 0xcc, 0xa9, 0xcc, 0xa8, 0xc0, 0x2c, 0xc0, 0x30, 0xc0, 0xa, 0xc0, 0x9, 0xc0, 0x13, 0xc0, 0x14, 0x0, 0x9c, 0x0, 0x9d, 0x0, 0x2f, 0x0, 0x35, 0x1, 0x0, 0x1, 0x91, 0x0, 0x0, 0x0, 0x21, 0x0, 0x1f, 0x0, 0x0, 0x1c, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x0, 0x17, 0x0, 0x0, 0xff, 0x1, 0x0, 0x1, 0x0, 0x0, 0xa, 0x0, 0xe, 0x0, 0xc, 0x0, 0x1d, 0x0, 0x17, 0x0, 0x18, 0x0, 0x19, 0x1, 0x0, 0x1, 0x1, 0x0, 0xb, 0x0, 0x2, 0x1, 0x0, 0x0, 0x23, 0x0, 0x0, 0x0, 0x10, 0x0, 0xe, 0x0, 0xc, 0x2, 0x68, 0x32, 0x8, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x31, 0x2e, 0x31, 0x0, 0x5, 0x0, 0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x22, 0x0, 0xa, 0x0, 0x8, 0x4, 0x3, 0x5, 0x3, 0x6, 0x3, 0x2, 0x3, 0x0, 0x33, 0x0, 0x6b, 0x0, 0x69, 0x0, 0x1d, 0x0, 0x20, 0x89, 0x9, 0x85, 0x8f, 0xbe, 0xb6, 0xed, 0x2f, 0x12, 0x48, 0xba, 0x5b, 0x9e, 0x29, 0x78, 0xbe, 0xad, 0xe, 0x84, 0x1, 0x10, 0x19, 0x2c, 0x61, 0xda, 0xed, 0x0, 0x96, 0x79, 0x8b, 0x18, 0x44, 0x0, 0x17, 0x0, 0x41, 0x4, 0x4d, 0x18, 0x3d, 0x91, 0xf5, 0xee, 0xd3, 0x57, 0x91, 0xfa, 0x98, 0x24, 0x64, 0xe3, 0xb0, 0x21, 0x4a, 0xaa, 0x5f, 0x5d, 0x1b, 0x78, 0x61, 0x6d, 0x9b, 0x9f, 0xbe, 0xbc, 0x22, 0xd1, 0x1f, 0x53, 0x5b, 0x2f, 0x94, 0xc6, 0x86, 0x14, 0x31, 0x36, 0xaa, 0x79, 0x5e, 0x6e, 0x5a, 0x87, 0x5d, 0x6c, 0x8, 0x6, 0x4a, 0xd5, 0xb7, 0x6d, 0x44, 0xca, 0xad, 0x76, 0x6e, 0x24, 0x83, 0x1, 0x27, 0x48, 0x0, 0x2b, 0x0, 0x5, 0x4, 0x3, 0x4, 0x3, 0x3, 0x0, 0xd, 0x0, 0x18, 0x0, 0x16, 0x4, 0x3, 0x5, 0x3, 0x6, 0x3, 0x8, 0x4, 0x8, 0x5, 0x8, 0x6, 0x4, 0x1, 0x5, 0x1, 0x6, 0x1, 0x2, 0x3, 0x2, 0x1, 0x0, 0x2d, 0x0, 0x2, 0x1, 0x1, 0x0, 0x1c, 0x0, 0x2, 0x40, 0x1, 0x0, 0x15, 0x0, 0x7a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
			protocol:    't',
			expectedJA4: "t13d1715h2_5b57614c22b0_3d5424432f57",
		},
		{
			name:        "BadCurveBall",
			payload:     []byte{0x16, 0x3, 0x1, 0x2, 0x0, 0x1, 0x0, 0x1, 0xfc, 0x3, 0x3, 0xc5, 0xb0, 0x8a, 0x8a, 0x5a, 0x1a, 0x1f, 0x31, 0xe5, 0xbc, 0xd0, 0x85, 0x3b, 0x6f, 0x59, 0x94, 0x4d, 0xfe, 0xc2, 0x90, 0xa, 0x71, 0x2a, 0x2a, 0x60, 0x59, 0xb8, 0x27, 0xc5, 0x8c, 0xf4, 0x80, 0x20, 0x7, 0x8a, 0x38, 0x9e, 0xf1, 0x76, 0x7d, 0xa3, 0x4, 0xd9, 0xe1, 0xc, 0xc7, 0xa9, 0x44, 0x1a, 0x73, 0x45, 0x13, 0x69, 0x4d, 0x3a, 0x35, 0x3e, 0xd9, 0x52, 0x2a, 0xc4, 0x7f, 0x9c, 0x8a, 0xa4, 0x0, 0x22, 0xaa, 0xaa, 0x13, 0x1, 0x13, 0x2, 0x13, 0x3, 0xc0, 0x2b, 0xc0, 0x2f, 0xc0, 0x2c, 0xc0, 0x30, 0xcc, 0xa9, 0xcc, 0xa8, 0xc0, 0x13, 0xc0, 0x14, 0x0, 0x9c, 0x0, 0x9d, 0x0, 0x2f, 0x0, 0x35, 0x0, 0xa, 0x1, 0x0, 0x1, 0x91, 0x4a, 0x4a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1a, 0x0, 0x18, 0x0, 0x0, 0x15, 0x62, 0x61, 0x64, 0x2e, 0x63, 0x75, 0x72, 0x76, 0x65, 0x62, 0x61, 0x6c, 0x6c, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x0, 0x17, 0x0, 0x0, 0xff, 0x1, 0x0, 0x1, 0x0, 0x0, 0xa, 0x0, 0xa, 0x0, 0x8, 0xca, 0xca, 0x0, 0x1d, 0x0, 0x17, 0x0, 0x18, 0x0, 0xb, 0x0, 0x2, 0x1, 0x0, 0x0, 0x23, 0x0, 0x0, 0x0, 0x10, 0x0, 0xe, 0x0, 0xc, 0x2, 0x68, 0x32, 0x8, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x31, 0x2e, 0x31, 0x0, 0x5, 0x0, 0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd, 0x0, 0x14, 0x0, 0x12, 0x4, 0x3, 0x8, 0x4, 0x4, 0x1, 0x5, 0x3, 0x8, 0x5, 0x5, 0x1, 0x8, 0x6, 0x6, 0x1, 0x2, 0x1, 0x0, 0x12, 0x0, 0x0, 0x0, 0x33, 0x0, 0x2b, 0x0, 0x29, 0xca, 0xca, 0x0, 0x1, 0x0, 0x0, 0x1d, 0x0, 0x20, 0xec, 0x9c, 0x73, 0x1a, 0xe0, 0xf8, 0x3a, 0x31, 0x5e, 0xc3, 0x8e, 0xd8, 0xcc, 0x94, 0x91, 0x25, 0x2, 0xab, 0x3c, 0xa9, 0x13, 0xa2, 0x9b, 0x7d, 0x3, 0x7d, 0x7c, 0xa, 0xe6, 0xa6, 0xe8, 0x1a, 0x0, 0x2d, 0x0, 0x2, 0x1, 0x1, 0x0, 0x2b, 0x0, 0xb, 0xa, 0x2a, 0x2a, 0x3, 0x4, 0x3, 0x3, 0x3, 0x2, 0x3, 0x1, 0x0, 0x1b, 0x0, 0x3, 0x2, 0x0, 0x2, 0x7a, 0x7a, 0x0, 0x1, 0x0, 0x0, 0x15, 0x0, 0xc3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
			protocol:    't',
			expectedJA4: "t13d1615h2_46e7e9700bed_45f260be83e2",
		},
		{
			name:        "IPv6",
			payload:     []byte{0x16, 0x3, 0x1, 0x0, 0xe8, 0x1, 0x0, 0x0, 0xe4, 0x3, 0x3, 0x85, 0x82, 0x26, 0xc0, 0x4f, 0xba, 0xed, 0xde, 0xf4, 0x24, 0x60, 0x93, 0xb4, 0xcf, 0xda, 0xb3, 0x8f, 0x9d, 0xcf, 0xef, 0x14, 0x53, 0x60, 0xe4, 0x17, 0x68, 0x65, 0x75, 0xca, 0xc4, 0x9c, 0x70, 0x0, 0x0, 0x5c, 0xc0, 0x30, 0xc0, 0x2c, 0xc0, 0x28, 0xc0, 0x24, 0xc0, 0x14, 0xc0, 0xa, 0x0, 0x9f, 0x0, 0x6b, 0x0, 0x39, 0xcc, 0xa9, 0xcc, 0xa8, 0xcc, 0xaa, 0xff, 0x85, 0x0, 0xc4, 0x0, 0x88, 0x0, 0x81, 0x0, 0x9d, 0x0, 0x3d, 0x0, 0x35, 0x0, 0xc0, 0x0, 0x84, 0xc0, 0x2f, 0xc0, 0x2b, 0xc0, 0x27, 0xc0, 0x23, 0xc0, 0x13, 0xc0, 0x9, 0x0, 0x9e, 0x0, 0x67, 0x0, 0x33, 0x0, 0xbe, 0x0, 0x45, 0x0, 0x9c, 0x0, 0x3c, 0x0, 0x2f, 0x0, 0xba, 0x0, 0x41, 0xc0, 0x11, 0xc0, 0x7, 0x0, 0x5, 0x0, 0x4, 0xc0, 0x12, 0xc0, 0x8, 0x0, 0x16, 0x0, 0xa, 0x0, 0xff, 0x1, 0x0, 0x0, 0x5f, 0x0, 0x0, 0x0, 0x17, 0x0, 0x15, 0x0, 0x0, 0x12, 0x77, 0x77, 0x77, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6c, 0x61, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x0, 0xb, 0x0, 0x2, 0x1, 0x0, 0x0, 0xa, 0x0, 0x8, 0x0, 0x6, 0x0, 0x1d, 0x0, 0x17, 0x0, 0x18, 0x0, 0xd, 0x0, 0x1c, 0x0, 0x1a, 0x6, 0x1, 0x6, 0x3, 0xef, 0xef, 0x5, 0x1, 0x5, 0x3, 0x4, 0x1, 0x4, 0x3, 0xee, 0xee, 0xed, 0xed, 0x3, 0x1, 0x3, 0x3, 0x2, 0x1, 0x2, 0x3, 0x0, 0x10, 0x0, 0xe, 0x0, 0xc, 0x2, 0x68, 0x32, 0x8, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x31, 0x2e, 0x31},
			protocol:    't',
			expectedJA4: "t12d4605h2_85626a9a5f7f_aaf95bb78ec9",
		},
		{
			name:        "TLSHandShake",
			payload:     []byte{0x16, 0x3, 0x1, 0x2, 0x0, 0x1, 0x0, 0x1, 0xfc, 0x3, 0x3, 0xf, 0x9e, 0x38, 0xac, 0xb9, 0xa5, 0x4a, 0x7c, 0x6e, 0x0, 0xe2, 0x9a, 0x70, 0xac, 0x2f, 0xee, 0xe1, 0x80, 0xff, 0x76, 0xd7, 0xf2, 0x5d, 0xca, 0x84, 0x93, 0x2a, 0x66, 0xa4, 0x2d, 0x1e, 0x5a, 0x20, 0xbc, 0x58, 0xb9, 0x2f, 0x86, 0x5e, 0x6b, 0x9a, 0xa4, 0xa6, 0x37, 0x1c, 0xad, 0xcb, 0xa, 0xfe, 0x1d, 0xa1, 0xc0, 0xf7, 0x5, 0x20, 0x9a, 0x11, 0xd5, 0x23, 0x57, 0xf5, 0x6d, 0x5d, 0xd9, 0x62, 0x0, 0x20, 0xaa, 0xaa, 0x13, 0x1, 0x13, 0x2, 0x13, 0x3, 0xc0, 0x2b, 0xc0, 0x2f, 0xc0, 0x2c, 0xc0, 0x30, 0xcc, 0xa9, 0xcc, 0xa8, 0xc0, 0x13, 0xc0, 0x14, 0x0, 0x9c, 0x0, 0x9d, 0x0, 0x2f, 0x0, 0x35, 0x1, 0x0, 0x1, 0x93, 0x9a, 0x9a, 0x0, 0x0, 0xff, 0x1, 0x0, 0x1, 0x0, 0x0, 0x33, 0x0, 0x2b, 0x0, 0x29, 0xa, 0xa, 0x0, 0x1, 0x0, 0x0, 0x1d, 0x0, 0x20, 0xcf, 0x55, 0xaf, 0x26, 0x3, 0xe9, 0x2f, 0x59, 0xeb, 0x32, 0x17, 0x79, 0x70, 0x6a, 0x18, 0xfa, 0x6b, 0x96, 0xb1, 0x6c, 0x16, 0x40, 0x4c, 0x22, 0x64, 0xed, 0x68, 0x7a, 0x59, 0x40, 0x18, 0x78, 0x0, 0x2d, 0x0, 0x2, 0x1, 0x1, 0x0, 0x5, 0x0, 0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x44, 0x69, 0x0, 0x5, 0x0, 0x3, 0x2, 0x68, 0x32, 0x0, 0xd, 0x0, 0x12, 0x0, 0x10, 0x4, 0x3, 0x8, 0x4, 0x4, 0x1, 0x5, 0x3, 0x8, 0x5, 0x5, 0x1, 0x8, 0x6, 0x6, 0x1, 0x0, 0x10, 0x0, 0xe, 0x0, 0xc, 0x2, 0x68, 0x32, 0x8, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x31, 0x2e, 0x31, 0x0, 0x23, 0x0, 0x0, 0x0, 0x1b, 0x0, 0x3, 0x2, 0x0, 0x2, 0x0, 0x2b, 0x0, 0x7, 0x6, 0xa, 0xa, 0x3, 0x4, 0x3, 0x3, 0x0, 0x0, 0x0, 0x22, 0x0, 0x20, 0x0, 0x0, 0x1d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x0, 0x12, 0x0, 0x0, 0x0, 0xa, 0x0, 0xa, 0x0, 0x8, 0xa, 0xa, 0x0, 0x1d, 0x0, 0x17, 0x0, 0x18, 0x0, 0x17, 0x0, 0x0, 0x0, 0xb, 0x0, 0x2, 0x1, 0x0, 0x6a, 0x6a, 0x0, 0x1, 0x0, 0x0, 0x15, 0x0, 0xba, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
			protocol:    't',
			expectedJA4: "t13d1516h2_8daaf6152771_e5627efa2ab1",
		},
		{
			name:        "Invalid Payload",
			payload:     []byte{0x00, 0x01, 0x02},
			protocol:    't',
			expectedJA4: "",
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			ja4Str, err := ParseClientHelloForJA4(tt.payload, tt.protocol)

			if ja4Str != tt.expectedJA4 {
				t.Errorf("Test %s failed: expected JA4=%v, got=%v", tt.name, tt.expectedJA4, ja4Str)
			}

			if err != nil && tt.expectedJA4 != "" {
				t.Errorf("Test %s failed: unexpected error: %v", tt.name, err)
			}
		})
	}
}
